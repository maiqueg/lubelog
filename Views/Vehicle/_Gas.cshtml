@inject IConfiguration Configuration
@{
    var enableCsvImports = bool.Parse(Configuration[nameof(UserConfig.EnableCsvImports)]);
    var useMPG = bool.Parse(Configuration[nameof(UserConfig.UseMPG)]);
}
@model List<GasRecordViewModel>
<div class="row">
    <div class="d-flex justify-content-between">
        <div class="d-flex align-items-center flex-wrap">
            <span class="ms-2 badge bg-success">@($"# of Gas Records: {Model.Count()}")</span>
            @if (Model.Where(x=>x.MilesPerGallon > 0).Any())
            {
                <span class="ms-2 badge bg-primary">@($"Average Fuel Economy: {Model.Where(y => y.MilesPerGallon > 0)?.Average(x => x.MilesPerGallon).ToString("F") ?? "0"}")</span>
                <span class="ms-2 badge bg-primary">@($"Min Fuel Economy: {Model.Where(y => y.MilesPerGallon > 0)?.Min(x => x.MilesPerGallon).ToString("F") ?? "0"}")</span>
                <span class="ms-2 badge bg-primary">@($"Max Fuel Economy: {Model.Max(x => x.MilesPerGallon).ToString("F") ?? "0"}")</span>
            }
            <span class="ms-2 badge bg-success">@($"Total Fuel Consumed: {Model.Sum(x=>x.Gallons).ToString("F")}")</span>
            <span class="ms-2 badge bg-success">@($"Total Cost: {Model.Sum(x => x.Cost).ToString("C")}")</span>
        </div>
        @if (enableCsvImports)
        {
            <div class="btn-group">
                <button onclick="showAddGasRecordModal()" class="btn btn-primary btn-md mt-1 mb-1"><i class="bi bi-pencil-square me-2"></i>Add Gas Record</button>
                <button type="button" class="btn btn-md btn-primary btn-md mt-1 mb-1 dropdown-toggle dropdown-toggle-split" data-bs-toggle="dropdown" aria-expanded="false">
                    <span class="visually-hidden">Toggle Dropdown</span>
                </button>
                <ul class="dropdown-menu">
                    <li><a class="dropdown-item" href="#" onclick="showBulkImportModal('gasrecord')">Import via CSV</a></li>
                </ul>
            </div>
        } else {
            <button onclick="showAddGasRecordModal()" class="btn btn-primary btn-md mt-1 mb-1"><i class="bi bi-pencil-square me-2"></i>Add Gas Record</button>
        }
    </div>
</div>
<div class="row vehicleDetailTabContainer">
    <div class="col-12">
        <table class="table table-hover">
            <thead>
                <tr class="d-flex">
                    <th scope="col" class="col-2">Date Refueled</th>
                    <th scope="col" class="col-2">Odometer(@(useMPG ? "mi." : "km"))</th>
                    <th scope="col" class="col-2">Consumption(@(useMPG ? "gal" : "l"))</th>
                    <th scope="col" class="col-2">Fuel Economy(@(useMPG ? "mpg" : "km/l"))</th>
                    <th scope="col" class="col-2">Cost</th>
                    <th scope="col" class="col-2">Unit Cost</th>
                </tr>
            </thead>
            <tbody>
                @foreach (GasRecordViewModel gasRecord in Model)
                {
                    <tr class="d-flex" style="cursor:pointer;" onclick="showEditGasRecordModal(@gasRecord.Id)">
                        <td class="col-2">@gasRecord.Date</td>
                        <td class="col-2">@gasRecord.Mileage</td>
                        <td class="col-2">@gasRecord.Gallons.ToString("F")</td>
                        <td class="col-2">@gasRecord.MilesPerGallon.ToString("F")</td>
                        <td class="col-2">@gasRecord.Cost.ToString("C")</td>
                        <td class="col-2">@gasRecord.CostPerGallon.ToString("C")</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>


<div class="modal fade" id="gasRecordModal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content" id="gasRecordModalContent">

        </div>
    </div>
</div>
